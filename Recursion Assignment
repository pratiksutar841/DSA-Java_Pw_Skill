Q1 : Given an integer, find out the sum of its digits using recursion.
Input: n= 1234
Output: 10
Explanation: 1+2+3+4=10
public class Main {
    public static int sumOfDigits(int n) {
        if (n == 0) {
            return 0;
        }
        return (n % 10) + sumOfDigits(n / 10);
    }

    public static void main(String[] args) {
        int n = 1234;
        int sum = sumOfDigits(n);
        System.out.println("Sum of digits of " + n + " = " + sum);
    }
}
======================================================================================================================================================================
Q2: Given a number n. Find the sum of natural numbers till n but with alternate signs.
That means if n = 5 then you have to return 1-2+3-4+5 = 3 as your answer.
Constraints : 0<=n<=1e6
Input1 : n = 10
Output 1 : -5
Explanation : 1-2+3-4+5-6+7-8+9-10 = -5
Input 2 : n = 5
Output 2 : 3

public class Main {
    public static int sumOfAlternatingNumbers(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            if (i % 2 == 0) {
                sum -= i;
            } else {
                sum += i;
            }
        }
        return sum;
    }

    public static void main(String[] args) {
        int n = 10;
        int sum = sumOfAlternatingNumbers(n);
        System.out.println("Sum of natural numbers till " + n + " with alternate signs = " + sum);
    }
}
====================================================================================================================================================================
Q3: Print the max value of the array [ 13, 1, -3, 22, 5].
public class Main {
    public static int maxArrayValue(int[] arr, int index) {
        if (index == arr.length - 1) {
            return arr[index];
        }
        int max = maxArrayValue(arr, index + 1);
        return arr[index] > max ? arr[index] : max;
    }

    public static void main(String[] args) {
        int[] arr = {13, 1, -3, 22, 5};
        int max = maxArrayValue(arr, 0);
        System.out.println("Maximum value of the array: " + max);
    }
}
=======================================================================================================================================================================
Q4 : Find the sum of the values of the array [92, 23, 15, -20, 10].
public class Main {
    public static int sumArray(int[] arr, int index) {
        if (index == arr.length) {
            return 0;
        }
        return arr[index] + sumArray(arr, index + 1);
    }

    public static void main(String[] args) {
        int[] arr = {92, 23, 15, -20, 10};
        int sum = sumArray(arr, 0);
        System.out.println("Sum of the values of the array: " + sum);
    }
}
=======================================================================================================================================================================
Q5. Given a number n. Print if it is an armstrong number or not. An armstrong number is a number if the sum
of every digit in that number raised to the power of total digits in that number is equal to the number.
Example : 153 = 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153 hence 153 is an armstrong number. (Easy)
Input1 : 153
Output1 : Yes
Input 2 : 134
Output2 : No
public class Main {
    public static int countDigits(int n) {
        if (n < 10) {
            return 1;
        }
        return 1 + countDigits(n / 10);
    }

    public static boolean isArmstrong(int n) {
        int numDigits = countDigits(n);
        int sum = 0;
        int temp = n;
        while (temp > 0) {
            int digit = temp % 10;
            sum += Math.pow(digit, numDigits);
            temp /= 10;
        }
        return sum == n;
    }

    public static void main(String[] args) {
        int n1 = 153;
        if (isArmstrong(n1)) {
            System.out.println(n1 + " is an Armstrong number");
        } else {
            System.out.println(n1 + " is not an Armstrong number");
        }
        
        int n2 = 134;
        if (isArmstrong(n2)) {
            System.out.println(n2 + " is an Armstrong number");
        } else {
            System.out.println(n2 + " is not an Armstrong number");
        }
    }
}
======================================================================================================================================================================
